# MIT License
#
# Copyright (c) 2020-2022 Kazuhito Suda
#
# This file is part of NGSI Go
#
# https://github.com/lets-fiware/ngsi-go
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#
# 0001 Create registration
#
ngsi create --host orion registration --description "context source mock" \
--provider ${csource}/v2 --attrs temperature,atmosphericPressure,relativeHumidity \
--providedId urn:ngsi-ld:WeatherObserved:sensor001 --type WeatherObserved

```
REGEX([0-9a-z]{24})
```

$id=$$

#
# 0002 ngsi list registrations -P
#
ngsi list registrations -P

```
[
  {
    "id": "REGEX([0-9a-z]{24})",
    "description": "context source mock",
    "dataProvided": {
      "entities": [
        {
          "id": "urn:ngsi-ld:WeatherObserved:sensor001",
          "type": "WeatherObserved"
        }
      ],
      "attrs": [
        "temperature",
        "atmosphericPressure",
        "relativeHumidity"
      ]
    },
    "provider": {
      "http": {
        "url": "REGEX(.*)"
      },
      "supportedForwardingMode": "all",
      "legacyForwarding": false
    },
    "status": "active"
  }
]
```


#
# 0003 ngsi get registration
#
ngsi get registration --id $id -P

```
{
  "id": "REGEX([0-9a-z]{24})",
  "description": "context source mock",
  "dataProvided": {
    "entities": [
      {
        "id": "urn:ngsi-ld:WeatherObserved:sensor001",
        "type": "WeatherObserved"
      }
    ],
    "attrs": [
      "temperature",
      "atmosphericPressure",
      "relativeHumidity"
    ]
  },
  "provider": {
    "http": {
      "url": "REGEX(.*)"
    },
    "supportedForwardingMode": "all",
    "legacyForwarding": false
  },
  "status": "active"
}
```

#
# 0003 Get entity
#
ngsi get entity --id urn:ngsi-ld:WeatherObserved:sensor001 -P

```
{
  "id": "urn:ngsi-ld:WeatherObserved:sensor001",
  "type": "WeatherObserved",
  "atmosphericPressure": {
    "type": "Number",
    "value": 1006.64,
    "metadata": {}
  },
  "relativeHumidity": {
    "type": "Number",
    "value": 36.2,
    "metadata": {}
  },
  "temperature": {
    "type": "Number",
    "value": 24.83,
    "metadata": {}
  }
}
```

#
# 0004 Delete reistration
#
ngsi delete registration --id $id

```
```
