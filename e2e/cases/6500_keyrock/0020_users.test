# MIT License
#
# Copyright (c) 2020-2023 Kazuhito Suda
#
# This file is part of NGSI Go
#
# https://github.com/lets-fiware/ngsi-go
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#
# 0001 List users
#
ngsi users --host keyrock list --pretty

```
{
  "users": [
    {
      "scope": [],
      "id": "admin",
      "username": "admin",
      "email": "keyrock@letsfiware.jp",
      "enabled": true,
      "gravatar": false,
      "date_password": "REGEX(.*)",
      "description": null,
      "website": null
    }
  ]
}
```

#
# 0010 Create user
#
ngsi users create --username alice --email alice@test.com --password test

```
REGEX(.*)
```

#
# 0011 Save alice
#
$alice=$$

print $alice

#
# 0012 Get user
#
ngsi users get --uid $alice --pretty

```
{
  "user": {
    "scope": [],
    "id": "REGEX(.*)",
    "username": "alice",
    "email": "alice@test.com",
    "enabled": true,
    "admin": false,
    "image": "default",
    "gravatar": false,
    "date_password": "REGEX(.*)",
    "description": null,
    "website": null
  }
}
```

#
# 0013 Create user
#
ngsi users create --username bob --email bob-the-manager@test.com --password test

```
REGEX(.*)
```

#
# 0014 Save alice
#
$bob=$$

print $bob

#
# 0015 Get user
#
ngsi users get --uid $bob --pretty

```
{
  "user": {
    "scope": [],
    "id": "REGEX(.*)",
    "username": "bob",
    "email": "bob-the-manager@test.com",
    "enabled": true,
    "admin": false,
    "image": "default",
    "gravatar": false,
    "date_password": "REGEX(.*)",
    "description": null,
    "website": null
  }
}
```

#
# 0022 Update a user
#
ngsi users update --uid $bob --description "bob is the manager" --pretty

```
{
  "values_updated": {
    "description": "bob is the manager"
  }
}
```

#
# 0023 Get a user
#
ngsi users get --uid $bob --pretty

```
{
  "user": {
    "scope": [],
    "id": "REGEX(.*)",
    "username": "bob",
    "email": "bob-the-manager@test.com",
    "enabled": true,
    "admin": false,
    "image": "default",
    "gravatar": false,
    "date_password": "REGEX(.*)",
    "description": "bob is the manager",
    "website": null
  }
}
```

#
# 0031 Delete a user
#
ngsi users delete --uid $alice

```
```

#
# 0032 Delete a user
#
ngsi users delete --uid $bob

```
```
#
# 0033 List users
#
ngsi users list --pretty

```
{
  "users": [
    {
      "scope": [],
      "id": "REGEX(.*)",
      "username": "admin",
      "email": "keyrock@letsfiware.jp",
      "enabled": true,
      "gravatar": false,
      "date_password": "REGEX(.*)",
      "description": null,
      "website": null
    }
  ]
}
```

